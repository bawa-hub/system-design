services:
  # Infrastructure Services
  mysql:
    image: mysql:8.0
    container_name: nakku-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: nakku
      MYSQL_USER: nakku
      MYSQL_PASSWORD: nakkupassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - nakku-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: nakku-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2182:2181"
    networks:
      - nakku-network

  kafka:
    image: bitnami/kafka:latest
    container_name: nakku-kafka
    ports:
      - "9093:9092"
      - "9101:9101"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - nakku-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      timeout: 20s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: nakku-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - nakku-network

  redis:
    image: redis:7-alpine
    container_name: nakku-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nakku-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # Application Services
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: nakku-api-gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - USER_SERVICE_URL=http://user-service:8081
      - PRODUCT_SERVICE_URL=http://product-service:8082
      - INVENTORY_SERVICE_URL=http://inventory-service:8083
      - ORDER_SERVICE_URL=http://order-service:8084
      - CART_SERVICE_URL=http://cart-service:8085
      - PAYMENT_SERVICE_URL=http://payment-service:8086
      - DELIVERY_SERVICE_URL=http://delivery-service:8087
      - NOTIFICATION_SERVICE_URL=http://notification-service:8088
      - LOCATION_SERVICE_URL=http://location-service:8089
      - ANALYTICS_SERVICE_URL=http://analytics-service:8090
    depends_on:
      - mysql
      - kafka
      - redis
    networks:
      - nakku-network

  user-service:
    build:
      context: .
      dockerfile: ./services/user/Dockerfile
    container_name: nakku-user-service
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_user
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  product-service:
    build:
      context: .
      dockerfile: ./services/product/Dockerfile
    container_name: nakku-product-service
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_product
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  inventory-service:
    build:
      context: .
      dockerfile: ./services/inventory/Dockerfile
    container_name: nakku-inventory-service
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_inventory
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  order-service:
    build:
      context: .
      dockerfile: ./services/order/Dockerfile
    container_name: nakku-order-service
    ports:
      - "8084:8084"
    environment:
      - PORT=8084
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_order
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  cart-service:
    build:
      context: .
      dockerfile: ./services/cart/Dockerfile
    container_name: nakku-cart-service
    ports:
      - "8085:8085"
    environment:
      - PORT=8085
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_cart
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  payment-service:
    build:
      context: .
      dockerfile: ./services/payment/Dockerfile
    container_name: nakku-payment-service
    ports:
      - "8086:8086"
    environment:
      - PORT=8086
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_payment
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  delivery-service:
    build:
      context: .
      dockerfile: ./services/delivery/Dockerfile
    container_name: nakku-delivery-service
    ports:
      - "8087:8087"
    environment:
      - PORT=8087
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_delivery
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  notification-service:
    build:
      context: .
      dockerfile: ./services/notification/Dockerfile
    container_name: nakku-notification-service
    ports:
      - "8088:8088"
    environment:
      - PORT=8088
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_notification
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  location-service:
    build:
      context: .
      dockerfile: ./services/location/Dockerfile
    container_name: nakku-location-service
    ports:
      - "8089:8089"
    environment:
      - PORT=8089
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_location
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

  analytics-service:
    build:
      context: .
      dockerfile: ./services/analytics/Dockerfile
    container_name: nakku-analytics-service
    ports:
      - "8090:8090"
    environment:
      - PORT=8090
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=nakku
      - DB_PASSWORD=nakkupassword
      - DB_NAME=nakku_analytics
      - KAFKA_BROKERS=kafka:29092
      - REDIS_URL=redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nakku-network

volumes:
  mysql_data:
  kafka_data:
  redis_data:

networks:
  nakku-network:
    driver: bridge
